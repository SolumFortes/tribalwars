// ==UserScript==
// @name         Stable Recruit
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automates stable recruitment in Tribal Wars for light and heavy cavalry.
// @author       Wwwww
// @match        https://*/game.php?village=*screen=stable*
// @grant        none
// @icon         https://dscs.innogamescdn.com/asset/07220f21/graphic/buildings/stable.png
// ==/UserScript==

(function () {
    'use strict';

    console.log('[Stable Recruit] Script started');

    function saveData(key, value) {
        const prefix = 'stable_';
        localStorage.setItem(prefix + key, JSON.stringify(value));
    }

    function loadData(key, defaultValue) {
        const prefix = 'stable_';
        const data = localStorage.getItem(prefix + key);
        return data ? JSON.parse(data) : defaultValue;
    }

    function log(message) {
        console.log(`[Stable Recruit] ${message}`);
    }

    // **Vytvoření tabulky s tlačítkem ON/OFF a časem**
    const tableContainer = document.createElement('div');
    tableContainer.style.position = 'fixed';
    tableContainer.style.left = '10px';
    tableContainer.style.top = '50%';
    tableContainer.style.transform = 'translateY(-50%)';
    tableContainer.style.padding = '10px';
    tableContainer.style.border = '2px solid #8B4513';
    tableContainer.style.borderRadius = '8px';
    tableContainer.style.backgroundColor = '#F5DEB3';
    tableContainer.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';
    tableContainer.style.zIndex = '1000';

    const table = document.createElement('table');

    // **Řádek pro tlačítko ON/OFF**
    const scriptStatus = loadData('scriptStatus', false);
    const recruitButton = document.createElement('button');
    recruitButton.id = 'autoRekrutButton';
    recruitButton.textContent = scriptStatus ? 'Stable - ON' : 'Stable - OFF';
    recruitButton.style.backgroundColor = scriptStatus ? 'green' : 'red';
    recruitButton.style.color = 'white';
    recruitButton.style.border = 'none';
    recruitButton.style.borderRadius = '5px';
    recruitButton.style.padding = '10px';
    recruitButton.style.cursor = 'pointer';

    recruitButton.onclick = function () {
        const isOn = recruitButton.textContent === 'Stable - ON';
        recruitButton.textContent = isOn ? 'Stable - OFF' : 'Stable - ON';
        recruitButton.style.backgroundColor = isOn ? 'red' : 'green';
        saveData('scriptStatus', !isOn);
        log(`Script turned ${isOn ? 'OFF' : 'ON'}`);
        if (!isOn) startScript();
    };

    const buttonRow = table.insertRow();
    const buttonCell = buttonRow.insertCell();
    buttonCell.colSpan = 2; // Sloučení buňky přes dva sloupce
    buttonCell.appendChild(recruitButton);

    // **Řádek pro časové vstupy**
    const recruitmentTimeInput = document.createElement('input');
    recruitmentTimeInput.type = 'text';
    recruitmentTimeInput.placeholder = 'mm:ss';
    recruitmentTimeInput.value = loadData('timeValue', '00:00');
    recruitmentTimeInput.style.marginTop = '10px';
    recruitmentTimeInput.style.padding = '5px';
    recruitmentTimeInput.style.width = '100px';
    recruitmentTimeInput.onchange = () => saveData('timeValue', recruitmentTimeInput.value);

    const timeRow = table.insertRow();
    const timeLabelCell = timeRow.insertCell();
    timeLabelCell.textContent = 'Recruit Time:';
    const timeInputCell = timeRow.insertCell();
    timeInputCell.appendChild(recruitmentTimeInput);

    // **Checkbox pro light cavalry**
    const lightCheckbox = document.createElement('input');
    lightCheckbox.type = 'checkbox';
    lightCheckbox.checked = loadData('lightChecked', false);
    lightCheckbox.onchange = () => saveData('lightChecked', lightCheckbox.checked);

    const lightImage = document.createElement('img');
    lightImage.src = 'https://dscs.innogamescdn.com/asset/07220f21/graphic/unit/unit_light.png';
    lightImage.style.width = '17px';
    lightImage.style.height = '17px';
    lightImage.style.marginRight = '5px';

    const lightRow = table.insertRow();
    const lightCell = lightRow.insertCell();
    lightCell.appendChild(lightImage);
    lightCell.appendChild(lightCheckbox);

    // **Checkbox pro heavy cavalry**
    const heavyCheckbox = document.createElement('input');
    heavyCheckbox.type = 'checkbox';
    heavyCheckbox.checked = loadData('heavyChecked', false);
    heavyCheckbox.onchange = () => saveData('heavyChecked', heavyCheckbox.checked);

    const heavyImage = document.createElement('img');
    heavyImage.src = 'https://dscs.innogamescdn.com/asset/07220f21/graphic/unit/unit_heavy.png';
    heavyImage.style.width = '17px';
    heavyImage.style.height = '17px';
    heavyImage.style.marginRight = '5px';

    const heavyRow = table.insertRow();
    const heavyCell = heavyRow.insertCell();
    heavyCell.appendChild(heavyImage);
    heavyCell.appendChild(heavyCheckbox);

    tableContainer.appendChild(table);
    document.body.appendChild(tableContainer);

    async function startScript() {
        if (!loadData('scriptStatus', false)) return;

        log('Script running...');
        try {
            const isLightChecked = lightCheckbox.checked;
            const isHeavyChecked = heavyCheckbox.checked;
            const recruitmentTimeValue = loadData('timeValue', '00:00');
            const [minutes, seconds] = recruitmentTimeValue.split(':').map(Number);
            const timeInMilliseconds = (minutes * 60 + seconds) * 1000;

            log(`Light cavalry checked: ${isLightChecked}`);
            log(`Heavy cavalry checked: ${isHeavyChecked}`);
            log(`Wait time: ${timeInMilliseconds} ms`);

            if (!isLightChecked && !isHeavyChecked) {
                log('No unit type selected, stopping...');
                await delay(30000);
                location.reload();
                return;
            }

            const unitType = isLightChecked ? 'light' : 'heavy';
            const inputField = document.querySelector(`#${unitType}_0`);
            const recruitButton = document.querySelector('.btn-recruit');

            if (!inputField || !recruitButton) {
                log(`Element not found for ${unitType}, waiting 30 seconds before refreshing...`);
                await delay(30000);
                location.reload();
                return;
            }

            inputField.value = 1;
            log(`Set 1 ${unitType} in the recruit field`);
            await randomDelay(500, 1000);
            recruitButton.click();
            log(`${unitType} recruited`);

            log(`Waiting for ${timeInMilliseconds} ms before refreshing page...`);
            await delay(timeInMilliseconds);
            location.reload();
        } catch (error) {
            log(`Error: ${error.message}`);
            await delay(30000);
            location.reload();
        }
    }

    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function randomDelay(min, max) {
        return new Promise(resolve => setTimeout(resolve, Math.random() * (max - min) + min));
    }

    if (loadData('scriptStatus', false)) {
        startScript();
    }
})();
