// ==UserScript==
// @name         Barracks Recruit
// @namespace    http://tampermonkey.net/
// @version      1.0
// @description  Automates barracks recruitment for spear and axe units in Tribal Wars.
// @author       Wwwwě
// @match        https://*/game.php?village=*screen=barracks*
// @grant        none
// @icon         https://dscs.innogamescdn.com/asset/07220f21/graphic/buildings/barracks.png
// ==/UserScript==

(function () {
    'use strict';

    console.log('[Barracks Recruit] Script started');

    // **Uložení a načítání dat z localStorage pro Barracks**
    function saveData(key, value) {
        const prefix = 'barracks_'; // Prefix pro Barracks
        localStorage.setItem(prefix + key, JSON.stringify(value));
    }

    function loadData(key, defaultValue) {
        const prefix = 'barracks_'; // Prefix pro Barracks
        const data = localStorage.getItem(prefix + key);
        return data ? JSON.parse(data) : defaultValue;
    }

    // **Logování akcí**
    function log(message) {
        console.log(`[Barracks Recruit] ${message}`);
    }

    // **Vytvoření tlačítka ON/OFF pro Barracks**
    const recruitButton = document.createElement('button'); // Interní název tlačítka přejmenován na recruitButton
    recruitButton.id = 'autoRekrutButton';
    const scriptStatus = loadData('scriptStatus', false);
    recruitButton.textContent = scriptStatus ? 'Barracks - ON' : 'Barracks - OFF';
    recruitButton.style.backgroundColor = scriptStatus ? 'green' : 'red';
    recruitButton.style.position = 'fixed';
    recruitButton.style.left = '10px';
    recruitButton.style.top = '50%';
    recruitButton.style.transform = 'translateY(-50%)';
    recruitButton.style.padding = '10px';
    recruitButton.style.fontSize = '16px';
    recruitButton.style.border = 'none';
    recruitButton.style.borderRadius = '5px';
    recruitButton.style.color = 'white';
    recruitButton.style.cursor = 'pointer';
    recruitButton.style.zIndex = '1000';

    recruitButton.onclick = function () {
        const isOn = recruitButton.textContent === 'Barracks - ON';
        recruitButton.textContent = isOn ? 'Barracks - OFF' : 'Barracks - ON';
        recruitButton.style.backgroundColor = isOn ? 'red' : 'green';
        saveData('scriptStatus', !isOn);
        log(`Script turned ${isOn ? 'OFF' : 'ON'}`);
        if (!isOn) startScript();
    };

    document.body.appendChild(recruitButton);

    // **Vytvoření tabulky pro nastavení**
    const tableContainer = document.createElement('div');
    tableContainer.style.position = 'fixed';
    tableContainer.style.left = '10px';
    tableContainer.style.top = '60%';
    tableContainer.style.transform = 'translateY(-50%)';
    tableContainer.style.padding = '10px';
    tableContainer.style.border = '2px solid #8B4513';
    tableContainer.style.borderRadius = '8px';
    tableContainer.style.backgroundColor = '#F5DEB3';
    tableContainer.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';

    const table = document.createElement('table');

    // **Checkbox pro spear**
    const spearCheckbox = document.createElement('input');
    spearCheckbox.type = 'checkbox';
    spearCheckbox.checked = loadData('spearChecked', false);
    spearCheckbox.onchange = () => saveData('spearChecked', spearCheckbox.checked);

    const spearImage = document.createElement('img');
    spearImage.src = 'https://dscs.innogamescdn.com/asset/07220f21/graphic/unit/unit_spear.png';
    spearImage.style.width = '17px';
    spearImage.style.height = '17px';
    spearImage.style.marginRight = '5px';

    const spearRow = table.insertRow();
    const spearCell = spearRow.insertCell();
    spearCell.appendChild(spearImage);
    spearCell.appendChild(spearCheckbox);

    // **Checkbox pro axe**
    const axeCheckbox = document.createElement('input');
    axeCheckbox.type = 'checkbox';
    axeCheckbox.checked = loadData('axeChecked', false);
    axeCheckbox.onchange = () => saveData('axeChecked', axeCheckbox.checked);

    const axeImage = document.createElement('img');
    axeImage.src = 'https://dscs.innogamescdn.com/asset/07220f21/graphic/unit/unit_axe.png';
    axeImage.style.width = '17px';
    axeImage.style.height = '17px';
    axeImage.style.marginRight = '5px';

    const axeRow = table.insertRow();
    const axeCell = axeRow.insertCell();
    axeCell.appendChild(axeImage);
    axeCell.appendChild(axeCheckbox);

    // **Časový vstup (nové jméno pole)**
    const recruitmentTimeInput = document.createElement('input'); // Přejmenováno na recruitmentTimeInput
    recruitmentTimeInput.type = 'text';
    recruitmentTimeInput.placeholder = 'mm:ss';
    recruitmentTimeInput.value = loadData('timeValue', '00:00');
    recruitmentTimeInput.onchange = () => saveData('timeValue', recruitmentTimeInput.value);

    const timeRow = table.insertRow();
    timeRow.insertCell().colSpan = 2;
    timeRow.insertCell().appendChild(recruitmentTimeInput);

    tableContainer.appendChild(table);
    document.body.appendChild(tableContainer);

    // **Funkce pro spuštění skriptu**
    async function startScript() {
        if (!loadData('scriptStatus', false)) return;

        log('Script running...');
        try {
            const isSpearChecked = spearCheckbox.checked;
            const isAxeChecked = axeCheckbox.checked;
            const recruitmentTimeValue = loadData('timeValue', '00:00');
            const [minutes, seconds] = recruitmentTimeValue.split(':').map(Number);
            const timeInMilliseconds = (minutes * 60 + seconds) * 1000;

            log(`Spear checked: ${isSpearChecked}`);
            log(`Axe checked: ${isAxeChecked}`);
            log(`Wait time: ${timeInMilliseconds} ms`);

            if (!isSpearChecked && !isAxeChecked) {
                log('No unit type selected, stopping...');
                await delay(30000); // Počkej 30 sekund
                location.reload(); // Obnoví stránku
                return;
            }

            const unitType = isSpearChecked ? 'spear' : 'axe';
            const inputField = document.querySelector(`#${unitType}_0`);
            const recruitButton = document.querySelector('.btn-recruit');

            if (!inputField || !recruitButton) {
                log(`Element not found for ${unitType}, waiting 30 seconds before refreshing...`);
                await delay(30000); // Počkej 30 sekund
                location.reload(); // Obnoví stránku
                return;
            }

            inputField.value = 1;
            log(`Set 1 ${unitType} in the recruit field`);
            await randomDelay(500, 1000);
            recruitButton.click();
            log(`${unitType} recruited`);

            log(`Waiting for ${timeInMilliseconds} ms before refreshing page...`);
            await delay(timeInMilliseconds); // Počkej podle vyplněného času
            location.reload(); // Obnoví stránku po uplynutí čekací doby
        } catch (error) {
            log(`Error: ${error.message}`);
            await delay(30000); // Počkej 30 sekund před obnovením stránky
            location.reload(); // Obnoví stránku
        }
    }

    function delay(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    function randomDelay(min, max) {
        return new Promise(resolve => setTimeout(resolve, Math.random() * (max - min) + min));
    }

    if (loadData('scriptStatus', false)) {
        startScript();
    }
})();
